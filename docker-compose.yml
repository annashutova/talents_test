version: '3.9'

services:
  nginx:
    build:
      dockerfile: nginx/Dockerfile
      context: .
    ports:
      - "80:80"
    depends_on:
      web:
        condition: service_healthy

  web:
    build:
      dockerfile: docker/Dockerfile
      context: .
    command: scripts/web/startup.sh -m -l
    restart: unless-stopped
    env_file:
      - ./conf/.env
    volumes:
      - .:/code
    expose:
      - "8100"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8100/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      database:
        condition: service_healthy

  database:
    image: library/postgres:13.2
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=main_db
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "main_db" ]
      interval: 5s
      retries: 5
    volumes:
      - ./scripts/postgres:/docker-entrypoint-initdb.d
      - prom_data:/var/lib/postgresql/data

volumes:
 prom_data:
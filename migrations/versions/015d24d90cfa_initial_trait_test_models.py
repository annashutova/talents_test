"""Initial trait test models

Revision ID: 015d24d90cfa
Revises: 
Create Date: 2025-03-12 22:07:42.759507

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '015d24d90cfa'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('started', 'in_progress', 'finished', name='statusenum').create(op.get_bind())
    sa.Enum('trait_lack', 'trait_virtue', 'trait_excess', name='traitdegreeenum').create(op.get_bind())
    sa.Enum('male', 'female', 'other', name='genderenum').create(op.get_bind())
    op.create_table('trait',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trait_lack', sa.String(length=50), nullable=False),
    sa.Column('trait_virtue', sa.String(length=50), nullable=False),
    sa.Column('trait_excess', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_trait')),
    schema='talents'
    )
    op.create_index(op.f('ix_talents_trait_id'), 'trait', ['id'], unique=False, schema='talents')
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=250), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('surname', sa.String(length=50), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(), nullable=False),
    sa.Column('gender', postgresql.ENUM('male', 'female', 'other', name='genderenum', create_type=False), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('email', name=op.f('uq_user_email')),
    schema='talents'
    )
    op.create_index(op.f('ix_talents_user_id'), 'user', ['id'], unique=False, schema='talents')
    op.create_table('interpretation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trait_degree', postgresql.ENUM('trait_lack', 'trait_virtue', 'trait_excess', name='traitdegreeenum', create_type=False), nullable=False),
    sa.Column('lower_bound', sa.Float(), nullable=False),
    sa.Column('upper_bound', sa.Float(), nullable=False),
    sa.Column('short_description', sa.Text(), nullable=False),
    sa.Column('long_description', sa.Text(), nullable=False),
    sa.Column('trait_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['trait_id'], ['talents.trait.id'], name=op.f('fk_interpretation_trait_id_trait')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_interpretation')),
    schema='talents'
    )
    op.create_index(op.f('ix_talents_interpretation_id'), 'interpretation', ['id'], unique=False, schema='talents')
    op.create_table('question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_content', sa.Text(), nullable=False),
    sa.Column('trait_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['trait_id'], ['talents.trait.id'], name=op.f('fk_question_trait_id_trait')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_question')),
    sa.UniqueConstraint('question_content', name=op.f('uq_question_question_content')),
    schema='talents'
    )
    op.create_index(op.f('ix_talents_question_id'), 'question', ['id'], unique=False, schema='talents')
    op.create_table('user_test',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', postgresql.ENUM('started', 'in_progress', 'finished', name='statusenum', create_type=False), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['talents.user.id'], name=op.f('fk_user_test_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_test')),
    schema='talents'
    )
    op.create_index(op.f('ix_talents_user_test_id'), 'user_test', ['id'], unique=False, schema='talents')
    op.create_table('answer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('answer_content', sa.Text(), nullable=False),
    sa.Column('a_param', sa.Float(), nullable=False),
    sa.Column('b_param', sa.Float(), nullable=False),
    sa.Column('c_param', sa.Float(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['talents.question.id'], name=op.f('fk_answer_question_id_question')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_answer')),
    schema='talents'
    )
    op.create_index(op.f('ix_talents_answer_id'), 'answer', ['id'], unique=False, schema='talents')
    op.create_table('user_result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('a_param', sa.Float(), nullable=False),
    sa.Column('b_param', sa.Float(), nullable=False),
    sa.Column('c_param', sa.Float(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('trait_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['test_id'], ['talents.user_test.id'], name=op.f('fk_user_result_test_id_user_test'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['trait_id'], ['talents.trait.id'], name=op.f('fk_user_result_trait_id_trait')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_result')),
    schema='talents'
    )
    op.create_index(op.f('ix_talents_user_result_id'), 'user_result', ['id'], unique=False, schema='talents')
    op.create_table('user_answer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('response_date', sa.DateTime(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('answer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['answer_id'], ['talents.answer.id'], name=op.f('fk_user_answer_answer_id_answer')),
    sa.ForeignKeyConstraint(['test_id'], ['talents.user_test.id'], name=op.f('fk_user_answer_test_id_user_test'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_answer')),
    schema='talents'
    )
    op.create_index(op.f('ix_talents_user_answer_id'), 'user_answer', ['id'], unique=False, schema='talents')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_talents_user_answer_id'), table_name='user_answer', schema='talents')
    op.drop_table('user_answer', schema='talents')
    op.drop_index(op.f('ix_talents_user_result_id'), table_name='user_result', schema='talents')
    op.drop_table('user_result', schema='talents')
    op.drop_index(op.f('ix_talents_answer_id'), table_name='answer', schema='talents')
    op.drop_table('answer', schema='talents')
    op.drop_index(op.f('ix_talents_user_test_id'), table_name='user_test', schema='talents')
    op.drop_table('user_test', schema='talents')
    op.drop_index(op.f('ix_talents_question_id'), table_name='question', schema='talents')
    op.drop_table('question', schema='talents')
    op.drop_index(op.f('ix_talents_interpretation_id'), table_name='interpretation', schema='talents')
    op.drop_table('interpretation', schema='talents')
    op.drop_index(op.f('ix_talents_user_id'), table_name='user', schema='talents')
    op.drop_table('user', schema='talents')
    op.drop_index(op.f('ix_talents_trait_id'), table_name='trait', schema='talents')
    op.drop_table('trait', schema='talents')
    sa.Enum('male', 'female', 'other', name='genderenum').drop(op.get_bind())
    sa.Enum('trait_lack', 'trait_virtue', 'trait_excess', name='traitdegreeenum').drop(op.get_bind())
    sa.Enum('started', 'in_progress', 'finished', name='statusenum').drop(op.get_bind())
    # ### end Alembic commands ###
